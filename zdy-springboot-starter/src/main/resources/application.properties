#本工程基础配置
spring.application.name=zdy-common-project
server.port=8083

#环境配置
spring.profiles.active=dev

#修改默认的静态寻址资源目录 多个使用逗号分隔
spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/os/,classpath:/conf/


#添加Redis配置,已经抽离到classpath:/conf/redis.properties文件中了


#添加Spring-Cloud-Zuul的网关路径,定制拦截uri，说明：配置了url后可以将请求uri直接映射到当前工程
zuul.routes.gateway.path=/gateway/**
zuul.routes.gateway.url=http://localhost:8083/
zuul.routes.gateway.serviceId=zdy-common-project
#zuul.retryable=true

#####添加Mybatis配置
#mapper.xml路径映射
mybatis.mapper-locations=classpath\:/mapper/**/*.xml
#启用驼峰命名法
#mybatis.configuration.map-underscore-to-camel-case=true
#启用SQL打印，格式：logging.level.*mapper.java所在包路径*=debug
logging.level.com.zdy.mystarter.intergration.mapper.basic=debug
#开启mybatis的配置文件，在其中配置二级缓存的启动开关,MapperProxy这个代理类会默认加载mybatis的配置信息
mybatis.configuration.cache-enabled=true

#配置DataSource数据源（Mybatis+Jpa共用一套数据源）
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://127.0.0.1:3333/mybatisDB?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = 123

#配置jpa
spring.jpa.hibernate.ddl-auto =update
spring.jpa.show-sql=true
spring.jpa.open-in-view=true

#线程池配置
spring.task.pool.core-pool-size=10
spring.task.pool.keep-alive-seconds=20000
spring.task.pool.max-pool-size=100
spring.task.pool.queue-capacity=10000
spring.task.pool.thread-name-prefix=ZDY-AsyncTask-

#配置注册中心-consul
spring.cloud.consul.discovery.tags=version=1.2
spring.cloud.consul.discovery.healthCheckInterval=15s

#设置Feign，
#默认是不开启Hystrix的，默认false，开启后会使用Feign.Builder的实现子类：HystrixFiegn.Builder
feign.hystrix.enabled=true
#
feign.compression.request.enabled=true
feign.compression.response.enabled=true
feign.compression.request.mime-types=text/html,application/xml,application/json
feign.compression.request.min-request-size=2048
feign.httpclient.connection-timeout=60000
feign.httpclient.time-to-live=60000

#开启spring-cloud-starter-hystrix
#hystrix.metrics.enabled=true


#设置ribbon暂未引入，待调试
spring.cloud.loadbalancer.ribbon.enabled=true

#swagger设置

